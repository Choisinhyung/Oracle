-- GROUP BY % HAVING
-- SELECT ~ FROM ~ WHERE ~ ORDER BY(정렬 ASC DESC)

SELECT EMPLOYEE_ID
     , FIRST_NAME || ' ' || LAST_NAME AS "NAME"
     , SALARY
     , HIRE_DATE
     , COMMISSION_PCT
  FROM EMPLOYEES
 ORDER BY 5 NULLS FIRST;

-- ORDER BY 5 NULLS LAST;
-- ORDER BY SALARY DESC, NAME; (급여는 내림차순 이름은 오름차순)
-- ORDER BY NAME DESC
-- ORDER BY SALARY;

SELECT * 
  FROM EMPLOYEES;

--GROUP_BY : 컬럼을 기준으로 묶을 것인지 명시해야함 
-- DISTINCT : 중복제거
SELECT DEPARTMENT_ID
     , JOB_ID
     , MIN(SALARY)
     , MAX(SALARY)
     , AVG(SALARY)
     , SUM(SALARY)
     , COUNT(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID, JOB_ID
 ORDER BY DEPARTMENT_ID;

-- 고용년도 별로 그룹 묶기 / SELECT절과 GROUP_BY는 같게 출력~
-- HAVING : WHERE 절과 같음. 그룹의 조건을 표현함
SELECT EXTRACT(YEAR FROM HIRE_DATE) AS "고용년"
     , MIN(SALARY)
     , MAX(SALARY)
     , AVG(SALARY)
     , SUM(SALARY)
     , COUNT(SALARY)
  FROM EMPLOYEES
 GROUP BY EXTRACT(YEAR FROM HIRE_DATE)
 HAVING COUNT(SALARY) > 1;

-- WHERE는 그룹바이 하기 전에 동작한다
SELECT COMMISSION_PCT
     , MIN(SALARY) AS "최저 급여"
     , MAX(SALARY) AS "최고 급여"
     , AVG(SALARY) AS "평균 급여"
     , SUM(SALARY) AS "급여 총합"
     , COUNT(SALARY) AS "인원수"
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL
   AND SALARY >= 7000
 GROUP BY COMMISSION_PCT
 HAVING AVG(SALARY) >= 9500
 ORDER BY 6;
 
SELECT COMMISSION_PCT
     , SALARY
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL
   AND SALARY >= 7000;
   
SELECT COMMISSION_PCT
     , MIN(SALARY) AS "최저 급여"
     , MAX(SALARY) AS "최고 급여"
     , AVG(SALARY) AS "평균 급여"
     , SUM(SALARY) AS "급여 총합"
     , COUNT(SALARY) AS "인원수"
  FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL
   AND SALARY >= 7000
 GROUP BY COMMISSION_PCT
 
/*
 * 1980년대, 1990년대, 2000년대 별로 그룹을 묶어서 급여의 평균과 인원수를 구한다.
 */
SELECT * FROM EMPLOYEES;

SELECT TRUNC(EXTRACT(YEAR FROM HIRE_DATE), -1) AS "년대"
     , ROUND(AVG(SALARY),2) AS "평균급여"
     , COUNT(*) AS "인원수"
  FROM EMPLOYEES
 GROUP BY TRUNC(EXTRACT(YEAR FROM HIRE_DATE), -1)
 ORDER BY 1;

SELECT SUBSTR(TO_CHAR(EXTRACT(YEAR FROM HIRE_DATE)), 1, 3) || '0' AS 년대
     , ROUND(AVG(SALARY), 2) AS 급여평균
     , COUNT(*) AS 인원수
  FROM EMPLOYEES
 GROUP BY SUBSTR(TO_CHAR(EXTRACT(YEAR FROM HIRE_DATE)), 1, 3) || '0'
 ORDER BY 년대;

SELECT FLOOR(EXTRACT(YEAR FROM HIRE_DATE) / 10) * 10 AS 년대
     , ROUND(AVG(SALARY), 2) AS 급여평균
     , COUNT(*) AS 인원수
  FROM EMPLOYEES
 GROUP BY FLOOR(EXTRACT(YEAR FROM HIRE_DATE) / 10) * 10
 ORDER BY 년대
 
/*
 * 급여 집계를 위한 그룹을 다음과 같이 묶어서 총 인원수를 구한다.
 *     2000 ~ 3500 미만  1그룹
 *     3500 ~ 5000 미만  2그룹
 *     5000 ~ 8000 미만  3그룹
 *     8000 ~ 12000 미만 4그룹
 *     12000 이상        5그룹
 */
 
SELECT CASE WHEN SALARY >= 2000 AND SALARY < 3500 THEN '1그룹'
            WHEN SALARY >= 3500 AND SALARY < 5000 THEN '2그룹'
            WHEN SALARY >= 5000 AND SALARY < 8000 THEN '3그룹'
            WHEN SALARY >= 8000 AND SALARY < 12000 THEN '4그룹'
            WHEN SALARY >= 12000 THEN '5그룹'
       END AS 그룹
     , COUNT(*) AS 인원수
  FROM EMPLOYEES
 GROUP BY CASE WHEN SALARY >= 2000 AND SALARY < 3500 THEN '1그룹'
               WHEN SALARY >= 3500 AND SALARY < 5000 THEN '2그룹'
               WHEN SALARY >= 5000 AND SALARY < 8000 THEN '3그룹'
               WHEN SALARY >= 8000 AND SALARY < 12000 THEN '4그룹'
               WHEN SALARY >= 12000 THEN '5그룹'
          END
 ORDER BY 그룹;

SELECT DEPARTMENT_ID
     , JOB_ID
     , SUM(SALARY)
     , AVG(SALARY)
     , COUNT(*)
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IS NOT NULL
 GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID);

SELECT DEPARTMENT_ID
     , JOB_ID
     , SUM(SALARY)
     , AVG(SALARY)
     , COUNT(*)
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IS NOT NULL
 GROUP BY CUBE(DEPARTMENT_ID, JOB_ID)
 ORDER BY DEPARTMENT_ID, JOB_ID NULLS LAST;

 SELECT DEPARTMENT_ID
     , JOB_ID
     , DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES')
     , SUM(SALARY)
     , AVG(SALARY)
     , COUNT(*)
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IS NOT NULL
 GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID, DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES'));


SELECT DEPARTMENT_ID
     , JOB_ID
     , DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES')
     , SUM(SALARY)
     , AVG(SALARY)
     , COUNT(*)
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IS NOT NULL
 GROUP BY CUBE(DEPARTMENT_ID, JOB_ID, DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES'))
 ORDER BY DEPARTMENT_ID, JOB_ID, 3 NULLS LAST;
 